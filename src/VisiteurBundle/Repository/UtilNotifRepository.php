<?php

namespace VisiteurBundle\Repository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use UserBundle\Entity\Utilisateur;
use DateTime;
/**
 * UtilNotifRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UtilNotifRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param Utilisateur $utilisateur
     * @param DateTime $dateDebut
     * @param DateTime $dateFin
     * @return Collection
     */
    public function getNotifications(Utilisateur $utilisateur, DateTime $dateDebut, DateTime $dateFin) {
        $queryBuilder = $this
            ->createQueryBuilder('notifications')
            ->select('n , u')
            ->from('VisiteurBundle:Notification', 'n')
            ->from('VisiteurBundle:UtilNotif', 'u')
            ->where('u.notif = n.id')
            ->andWhere('u.utilisateur = :utilisateur')
            ->andWhere('n.datetime >= :date_debut')
            ->andWhere('n.datetime < :date_fin')
            ->orderBy('n.datetime', 'desc')
            ->setParameter('date_debut', $dateDebut)
            ->setParameter('date_fin', $dateFin)
            ->setParameters([
                'date_debut' => $dateDebut,
                'date_fin' => $dateFin,
                'utilisateur' => $utilisateur
            ])
        ;


        return new ArrayCollection($queryBuilder->getQuery()->getResult());
    }

    public function getUtilisateursNotifications(Utilisateur $utilisateur, DateTime $dateDebut, DateTime $dateFin) {
        $queryBuilder = $this
            ->createQueryBuilder('notifications')
            ->select('u')
            ->from('VisiteurBundle:Notification', 'n')
            ->from('VisiteurBundle:UtilNotif', 'u')
            ->where('u.notif = n.id')
            ->andWhere('u.utilisateur = :utilisateur')
            ->andWhere('n.datetime >= :date_debut')
            ->andWhere('n.datetime < :date_fin')
            ->orderBy('n.datetime', 'desc')
            ->setParameter('date_debut', $dateDebut)
            ->setParameter('date_fin', $dateFin)
            ->setParameters([
                'date_debut' => $dateDebut,
                'date_fin' => $dateFin,
                'utilisateur' => $utilisateur
            ])
        ;


        return new ArrayCollection($queryBuilder->getQuery()->getResult());
    }

    public function getNbNotifNonLu(Utilisateur $utilisateur) {
        $queryBuilder = $this
            ->createQueryBuilder('notifications')
            ->select('u')
            ->from('VisiteurBundle:UtilNotif', 'u')
            ->andWhere('u.utilisateur = :utilisateur')
            ->andWhere('u.lu = 1')
            ->setParameters([
                'utilisateur' => $utilisateur
            ])
        ;


        return $queryBuilder->getQuery()->getResult();
    }
}
